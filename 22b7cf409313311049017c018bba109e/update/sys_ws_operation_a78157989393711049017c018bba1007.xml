<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_ws_operation">
    <sys_ws_operation action="INSERT_OR_UPDATE">
        <active>true</active>
        <consumes>application/json</consumes>
        <consumes_customized>false</consumes_customized>
        <default_operation_uri/>
        <enforce_acl>cf9d01d3e73003009d6247e603f6a990</enforce_acl>
        <http_method>GET</http_method>
        <name>Get Champions</name>
        <operation_script><![CDATA[(function process( /*RESTAPIRequest*/ request, /*RESTAPIResponse*/ response) {

    var answer = [];

    // Get the query params
    var name = request.queryParams.name;
    var description = request.queryParams.description;
    var role = request.queryParams.role;
    var active = request.queryParams.active;
    var title = request.queryParams.title;
    var release_date = request.queryParams.release_date;
    var region = request.queryParams.region;
	

    var championsGR = new GlideRecord('x_886019_champions_champions');
	if (name) {championsGR.addQuery('name', name); }
	if (description) {championsGR.addQuery('description', description); }
	if (role) {championsGR.addQuery('role', role); }
	if (active) {championsGR.addQuery('active', active); }
	if (title) {championsGR.addQuery('title', title); }
	if (release_date) {championsGR.addQuery('release_date', release_date); }
	if (region) {championsGR.addQuery('region', region); }
    championsGR.query();
	
	if (!championsGR.hasNext()) {
		response.setError(new sn_ws_err.NotFoundError('No records found.'));
		response.setStatus(404);
		return;
	}

    // For Champ found generate JSON obj and save the champion data in it
    while (championsGR.next()) {
        var championObj = {
            "name": championsGR.getValue('name'),
            "description": championsGR.getValue('description'),
            "role": championsGR.getValue('role'),
            "active": championsGR.getValue('active'),
            'title': championsGR.getValue('title'),
            "release_date": championsGR.getValue('release_date'),
            'region': championsGR.getValue('region')
        };
        answer.push(championObj);
    }

    response.setBody(answer);

})(request, response);]]></operation_script>
        <operation_uri>/api/x_886019_champions/champions/champions</operation_uri>
        <produces>application/json</produces>
        <produces_customized>false</produces_customized>
        <relative_path>/champions</relative_path>
        <request_example/>
        <requires_acl_authorization>true</requires_acl_authorization>
        <requires_authentication>true</requires_authentication>
        <requires_snc_internal_role>true</requires_snc_internal_role>
        <short_description/>
        <sys_class_name>sys_ws_operation</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2023-12-20 07:34:55</sys_created_on>
        <sys_id>a78157989393711049017c018bba1007</sys_id>
        <sys_mod_count>5</sys_mod_count>
        <sys_name>Get Champions</sys_name>
        <sys_package display_value="Champions" source="x_886019_champions">22b7cf409313311049017c018bba109e</sys_package>
        <sys_policy/>
        <sys_scope display_value="Champions">22b7cf409313311049017c018bba109e</sys_scope>
        <sys_update_name>sys_ws_operation_a78157989393711049017c018bba1007</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2023-12-20 07:43:27</sys_updated_on>
        <web_service_definition display_value="Champions">8f1f7e589353711049017c018bba1046</web_service_definition>
        <web_service_version/>
    </sys_ws_operation>
</record_update>
